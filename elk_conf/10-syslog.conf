input {
  beats {
    port => 5044
  }
}

filter {
  grok {
    match => {
      "message" => [ "%{NUMBER:pid} %{TIME:time} %{LOGLEVEL:log_level} (?<error>.*?(\n))(?<exception>(?:Exception).*?(\n))(?<err_message>(?:Message).*?(\n))(?<err_source>(?:Source).*?(\n))(?<stacktrace>(?m:.*))?",
      "%{NUMBER:pid} %{TIME:time} %{LOGLEVEL:log_level} (?<error>.*?(\n))(?<exception[1]>(?:Exception).*?(\n))(?<err_message[1]>(?:Message).*?(\n))(?<err_source[1]>(?:Source).*?(\n))(?<stacktrace>(?m:.*))?",
      "%{NUMBER:pid} %{TIME:time} %{LOGLEVEL:log_level} %{GREEDYDATA:err_message}" ] 
    }  
  }
  grok {
    match => [ "source", "(%{YEAR:year}%{MONTHNUM:month}%{MONTHDAY:day}\.%{HOUR:hour}%{MINUTE:minute}%{SECOND:second}\.txt$)" ]
    add_field => [ "timestamp", "%{year}/%{month}/%{day} %{time}" ]
  }
  date {
    match => [ "timestamp", "yyyy/MM/dd HH:mm:ss" ]
    target => "@timestamp"
  }
  mutate {
    remove_field => ["year", "month", "day", "hour", "minute", "second"]
  }
}

output {
  stdout {
    codec => rubydebug
  }
  elasticsearch {
    hosts=> "localhost"
  }
}

